[
  {
    "ContainingType": "TourBooking.API.Participant.ParticipantController",
    "Method": "GetParticipants",
    "RelativePath": "api/v1/TourBooking/{bookingId}/Participant",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookingId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.Participant.ParticipantController",
    "Method": "AddParticipant",
    "RelativePath": "api/v1/TourBooking/{bookingId}/Participant",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookingId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "Domain.Services.Participant.DTO.ParticipantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.Participant.ParticipantController",
    "Method": "GetParticipantById",
    "RelativePath": "api/v1/TourBooking/{bookingId}/Participant/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookingId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.Participant.ParticipantController",
    "Method": "UpdateParticipant",
    "RelativePath": "api/v1/TourBooking/{bookingId}/Participant/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookingId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "Domain.Services.Participant.DTO.ParticipantDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.Participant.ParticipantController",
    "Method": "DeleteParticipant",
    "RelativePath": "api/v1/TourBooking/{bookingId}/Participant/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookingId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.TourBooking.TourBookingController",
    "Method": "AddTourBooking",
    "RelativePath": "api/v1/tourbookings",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Domain.Services.TourBooking.DTO.TourBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.TourBooking.TourBookingController",
    "Method": "GetAll",
    "RelativePath": "api/v1/tourbookings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.TourBooking.TourBookingController",
    "Method": "GetTourBookingById",
    "RelativePath": "api/v1/tourbookings/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.TourBooking.TourBookingController",
    "Method": "Patch",
    "RelativePath": "api/v1/tourbookings/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "Domain.Services.TourBooking.DTO.UpdateTourBookingDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.TourBooking.TourBookingController",
    "Method": "UpdateTourBooking",
    "RelativePath": "api/v1/tourbookings/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "TourBooking.API.TourBooking.RequestObjects.UpdateTourBookingRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.TourBooking.TourBookingController",
    "Method": "Delete",
    "RelativePath": "api/v1/tourbookings/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.API.TourBooking.TourBookingController",
    "Method": "GetByTourId",
    "RelativePath": "api/v1/tourbookings/by-tour/{tourId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tourId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TourBooking.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[TourBooking.WeatherForecast, TourBooking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]